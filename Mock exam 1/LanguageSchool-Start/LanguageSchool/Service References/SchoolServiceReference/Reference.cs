//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanguageSchool.SchoolServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/SchoolService")]
    [System.SerializableAttribute()]
    public partial class Course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="SchoolService", ConfigurationName="SchoolServiceReference.ISchool", CallbackContract=typeof(LanguageSchool.SchoolServiceReference.ISchoolCallback))]
    public interface ISchool {
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/GetNumberOfCourses", ReplyAction="SchoolService/ISchool/GetNumberOfCoursesResponse")]
        int GetNumberOfCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/GetNumberOfCourses", ReplyAction="SchoolService/ISchool/GetNumberOfCoursesResponse")]
        System.Threading.Tasks.Task<int> GetNumberOfCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/GetTeacherName", ReplyAction="SchoolService/ISchool/GetTeacherNameResponse")]
        string GetTeacherName(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/GetTeacherName", ReplyAction="SchoolService/ISchool/GetTeacherNameResponse")]
        System.Threading.Tasks.Task<string> GetTeacherNameAsync(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/GetCourseList", ReplyAction="SchoolService/ISchool/GetCourseListResponse")]
        LanguageSchool.SchoolServiceReference.Course[] GetCourseList();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/GetCourseList", ReplyAction="SchoolService/ISchool/GetCourseListResponse")]
        System.Threading.Tasks.Task<LanguageSchool.SchoolServiceReference.Course[]> GetCourseListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/SignInForCourse", ReplyAction="SchoolService/ISchool/SignInForCourseResponse")]
        bool SignInForCourse(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/SignInForCourse", ReplyAction="SchoolService/ISchool/SignInForCourseResponse")]
        System.Threading.Tasks.Task<bool> SignInForCourseAsync(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/SubscribeEvent", ReplyAction="SchoolService/ISchool/SubscribeEventResponse")]
        void SubscribeEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/SubscribeEvent", ReplyAction="SchoolService/ISchool/SubscribeEventResponse")]
        System.Threading.Tasks.Task SubscribeEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/UnsubscribeEvent", ReplyAction="SchoolService/ISchool/UnsubscribeEventResponse")]
        void UnsubscribeEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="SchoolService/ISchool/UnsubscribeEvent", ReplyAction="SchoolService/ISchool/UnsubscribeEventResponse")]
        System.Threading.Tasks.Task UnsubscribeEventAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchoolCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="SchoolService/ISchool/OnCourseFull")]
        void OnCourseFull(string courseName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchoolChannel : LanguageSchool.SchoolServiceReference.ISchool, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SchoolClient : System.ServiceModel.DuplexClientBase<LanguageSchool.SchoolServiceReference.ISchool>, LanguageSchool.SchoolServiceReference.ISchool {
        
        public SchoolClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SchoolClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SchoolClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SchoolClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SchoolClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int GetNumberOfCourses() {
            return base.Channel.GetNumberOfCourses();
        }
        
        public System.Threading.Tasks.Task<int> GetNumberOfCoursesAsync() {
            return base.Channel.GetNumberOfCoursesAsync();
        }
        
        public string GetTeacherName(string courseName) {
            return base.Channel.GetTeacherName(courseName);
        }
        
        public System.Threading.Tasks.Task<string> GetTeacherNameAsync(string courseName) {
            return base.Channel.GetTeacherNameAsync(courseName);
        }
        
        public LanguageSchool.SchoolServiceReference.Course[] GetCourseList() {
            return base.Channel.GetCourseList();
        }
        
        public System.Threading.Tasks.Task<LanguageSchool.SchoolServiceReference.Course[]> GetCourseListAsync() {
            return base.Channel.GetCourseListAsync();
        }
        
        public bool SignInForCourse(string courseName) {
            return base.Channel.SignInForCourse(courseName);
        }
        
        public System.Threading.Tasks.Task<bool> SignInForCourseAsync(string courseName) {
            return base.Channel.SignInForCourseAsync(courseName);
        }
        
        public void SubscribeEvent() {
            base.Channel.SubscribeEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeEventAsync() {
            return base.Channel.SubscribeEventAsync();
        }
        
        public void UnsubscribeEvent() {
            base.Channel.UnsubscribeEvent();
        }
        
        public System.Threading.Tasks.Task UnsubscribeEventAsync() {
            return base.Channel.UnsubscribeEventAsync();
        }
    }
}
